{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Twitter Producer Stack",
    "Outputs": {
        "TwitterProducerAvailabilityZone": {
            "Description": "AvailabilityZone of EC2 Instance",
            "Value": {
                "Fn::GetAtt": [
                    "TwitterProducer",
                    "AvailabilityZone"
                ]
            }
        },
        "TwitterProducerEC2": {
            "Description": "EC2 Instance",
            "Value": {
                "Ref": "TwitterProducer"
            }
        },
        "TwitterProducerPrivateDnsName": {
            "Description": "Private Dns Name of EC2 Instance",
            "Value": {
                "Fn::GetAtt": [
                    "TwitterProducer",
                    "PrivateDnsName"
                ]
            }
        },
        "TwitterProducerPrivateIp": {
            "Description": "Private IP of EC2 Instance",
            "Value": {
                "Fn::GetAtt": [
                    "TwitterProducer",
                    "PrivateIp"
                ]
            }
        },
        "TwitterProducerPublicDnsName": {
            "Description": "Public Dns Name of EC2 Instance",
            "Value": {
                "Fn::GetAtt": [
                    "TwitterProducer",
                    "PublicDnsName"
                ]
            }
        },
        "TwitterProducerPublicIp": {
            "Description": "Public IP of EC2 Instance",
            "Value": {
                "Fn::GetAtt": [
                    "TwitterProducer",
                    "PublicIp"
                ]
            }
        }
    },
    "Resources": {
        "CodeDeployServiceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codedeploy.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ],
                                    "Sid": "EC2Access"
                                },
                                {
                                    "Action": [
                                        "autoscaling:CompleteLifecycleAction",
                                        "autoscaling:DescribeAutoScalingGroups",
                                        "autoscaling:DescribeLifecycleHooks",
                                        "autoscaling:DeleteLifecycleHook",
                                        "autoscaling:PutLifecycleHook",
                                        "autoscaling:RecordLifecycleActionHeartbeat"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ],
                                    "Sid": "AutoscalingAccess"
                                }
                            ]
                        },
                        "PolicyName": "TwitterProducerEC2StackCodeDeployPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "DeploymentGroup": {
            "DependsOn": [
                "TwitterProducer",
                "TwitterProducerCodeDeployApplication"
            ],
            "Properties": {
                "ApplicationName": {
                    "Ref": "TwitterProducerCodeDeployApplication"
                },
                "Deployment": {
                    "Description": "First automated deployment",
                    "Revision": {
                        "RevisionType": "S3",
                        "S3Location": {
                            "Bucket": "nicor-dev",
                            "BundleType": "zip",
                            "Key": "deployments/apps/twitter-to-kinesis/8aebd8fc0c3b62da8bf881b8678467492801022d.zip"
                        }
                    }
                },
                "DeploymentConfigName": "CodeDeployDefault.OneAtATime",
                "DeploymentGroupName": "TwitterProducer",
                "Ec2TagFilters": [
                    {
                        "Key": "Name",
                        "Type": "KEY_AND_VALUE",
                        "Value": "twitter-producer"
                    }
                ],
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "CodeDeployServiceRole",
                        "Arn"
                    ]
                }
            },
            "Type": "AWS::CodeDeploy::DeploymentGroup"
        },
        "InstanceProfile": {
            "Properties": {
                "InstanceProfileName": "TweeterUploaderInstanceProfile",
                "Roles": [
                    {
                        "Ref": "InstanceRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "InstanceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "kinesis:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:kinesis:eu-west-1:749785218022:stream/DevStreamES"
                                    ],
                                    "Sid": "KinesisAccess"
                                },
                                {
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ],
                                    "Sid": "LogsAccess"
                                },
                                {
                                    "Action": [
                                        "s3:Get*",
                                        "s3:List*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:s3:::nicor-dev",
                                        "arn:aws:s3:::nicor-dev/*"
                                    ],
                                    "Sid": "ReadS3DeploymentBucket"
                                }
                            ]
                        },
                        "PolicyName": "TwitterProducerEC2StackInstancePolicy"
                    }
                ],
                "RoleName": "TweetProducerRole"
            },
            "Type": "AWS::IAM::Role"
        },
        "TwitterProducer": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "update_yum_packages": {
                                "command": "yum update -y"
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[main]\n",
                                            "stack=",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            "\n",
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "interval=2",
                                            "\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.TwitterProducer.Metadata.AWS::CloudFormation::Init\n",
                                            "action=/opt/aws/bin/cfn-init -v",
                                            " --stack ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " --resource TwitterProducer",
                                            " --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\nrunas=root\n"
                                        ]
                                    ]
                                }
                            },
                            "/home/ec2-user/.bashrc": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export PATH=\"/home/ec2-user/miniconda/bin:$PATH\"\n"
                                        ]
                                    ]
                                },
                                "group": "ec2-user",
                                "mode": "000400",
                                "owner": "ec2-user"
                            },
                            "/root/.bashrc": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "export PATH=\"/home/ec2-user/miniconda/bin:$PATH\"\nexport STREAM_NAME=\"DevStreamES\"\n",
                                            "export PRODUCER_NAME=\"TwitterProducer\"\n",
                                            "export TWITTER_KEYWORDS=\"Sardegna,Vacanze,Mare\"\n",
                                            "export ENV=\"production\"\n"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/cfn/cfn-hup.conf",
                                        "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": "true",
                            "VolumeSize": "10",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "IamInstanceProfile": {
                    "Ref": "InstanceProfile"
                },
                "ImageId": "ami-d7b9a2b1",
                "InstanceInitiatedShutdownBehavior": "stop",
                "InstanceType": "t2.micro",
                "KeyName": "nicor88-dev",
                "Monitoring": "true",
                "SecurityGroupIds": [
                    "sg-389f2740"
                ],
                "SubnetId": "subnet-43ab5018",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "twitter-producer"
                    },
                    {
                        "Key": "StackName",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "yum update -y\nyum install -y gcc\n",
                                "su - ec2-user -c \"wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /home/ec2-user/miniconda.sh\"\n",
                                "su - ec2-user -c \"bash /home/ec2-user/miniconda.sh -b -p /home/ec2-user/miniconda\"\nrm -rf /home/ec2-user/miniconda.sh\nwget https://aws-codedeploy-eu-west-1.s3.amazonaws.com/latest/install -O /root/codedeploy_installer\n",
                                "chmod +x /root/codedeploy_installer\n",
                                "cd /root\n",
                                "./codedeploy_installer auto\n",
                                "service codedeploy-agent start\n",
                                "rm -rf /root/codedeploy_installer\n",
                                "/opt/aws/bin/cfn-init -v ",
                                " --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource TwitterProducer",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-hup || error_exit \"Failed to start cfn-hup\"",
                                "\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                " --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource TwitterProducer",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "TwitterProducerCodeDeployApplication": {
            "DependsOn": "TwitterProducer",
            "Properties": {
                "ApplicationName": "TwitterProducer"
            },
            "Type": "AWS::CodeDeploy::Application"
        }
    }
}