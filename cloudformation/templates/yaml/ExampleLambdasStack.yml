AWSTemplateFormatVersion: '2010-09-09'
Description: Collection of Lambda Function
Outputs:
  LambdaExecutionRole:
    Description: Lambdas Execution role
    Value: !Ref 'ExecutionRole'
Resources:
  AccessLambdaHelloWorld:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: HelloWorld
      Principal: events.amazonaws.com
      SourceArn: !GetAtt [ScheduledRuleHelloWorld, Arn]
    Type: AWS::Lambda::Permission
  ExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
            - arn:aws:logs:*:*:*
            Sid: Logs
          Version: '2012-10-17'
        PolicyName: GrantLogs
    Type: AWS::IAM::Role
  HelloWorldFunction:
    Properties:
      Code:
        S3Bucket: nicor-dev
        S3Key: deployments/lambdas/travis_build/hello_world.zip
      Description: Hello world lambdas with Python 3.6
      FunctionName: HelloWorld
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt [ExecutionRole, Arn]
      Runtime: python3.6
      Timeout: '30'
    Type: AWS::Lambda::Function
  ScheduledRuleHelloWorld:
    Properties:
      Description: Scheduled Event for Lambda HelloWorld
      ScheduleExpression: cron(0/5 * * * ? *)
      State: ENABLED
      Targets:
      - Arn: !GetAtt [HelloWorldFunction, Arn]
        Id: HelloWorldFunctionEventTarget
    Type: AWS::Events::Rule
