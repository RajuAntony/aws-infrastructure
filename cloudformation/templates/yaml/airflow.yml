AWSTemplateFormatVersion: '2010-09-09'
Description: Stack containing Airflow
Outputs:
  Airflow:
    Description: EC2 Instance
    Value: !Ref 'Airflow'
  AirflowPrivateDnsName:
    Description: Airflow Host Private DNS Name
    Value: !GetAtt 'Airflow.PrivateDnsName'
  AirflowPrivateIP:
    Description: Airflow Host Private IP
    Value: !GetAtt 'Airflow.PrivateIp'
Parameters:
  AMI:
    Default: ami-d7b9a2b1
    Description: 'AMI '
    Type: String
  InstanceType:
    Default: t2.micro
    Description: Instance Type
    Type: String
  PrivateRouteTable:
    Default: rtb-964c7ef0
    Description: Routing Table used for Private subnets
    Type: String
  VpcId:
    Default: vpc-8b708fec
    Description: VPC ID
    Type: String
Resources:
  Airflow:
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            download_miniconda:
              command: su - ec2-user -c "wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
                -O /home/ec2-user/miniconda.sh"
            install_gcc:
              command: yum install gcc -y
            install_miniconda:
              command: su - ec2-user -c "bash /home/ec2-user/miniconda.sh -b -p /home/ec2-user/miniconda"
            remove_installer:
              command: rm -rf /home/ec2-user/miniconda.sh
            update_yum_packages:
              command: yum update -y
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - "[main]\n"
                  - stack=
                  - !Ref 'AWS::StackId'
                  - "\n"
                  - region=
                  - !Ref 'AWS::Region'
                  - "\n"
                  - interval=2
                  - "\n"
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - "[cfn-auto-reloader-hook]\n"
                  - "triggers=post.update\n"
                  - "path=Resources.Airflow.Metadata.AWS::CloudFormation::Init\n"
                  - action=/opt/aws/bin/cfn-init -v
                  - ' --stack '
                  - !Ref 'AWS::StackId'
                  - ' --resource Airflow'
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - "\nrunas=root\n"
            /home/ec2-user/.bashrc:
              content: !Join
                - ''
                - - "export PATH=\"/home/ec2-user/miniconda/bin:$PATH\"\n"
              group: ec2-user
              mode: '000400'
              owner: ec2-user
            /home/ec2-user/.ssh/authorized_keys:
              content: !Join
                - ''
                - - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCjKxODWLSrmQAemYnpvYchmy7bwWvIKNWpHtfRiD7UKqnUV0euoFWIr9j+OwiNyMp/iopZQh7A8c+B4TYI8pd///J7ZWPSipndJkWc4HrnU37X66mKInGYIaPZAfek69eeUkl5cekqkEd6l6WsBUlrjPvMYtyGdDtd42M+aNQoy1TWq2C/6x0gBQaY/CUvHFBrMHr5ObhZvN7ou6PSyBCGgQxFf5jmnwSzeBRc/iWxMBltM/SQSTAgyKWdolcgBNTOTre5z8R8FCv/CIsfLoqUFuWthrT3YfpG1iOWlL3GBm8XxXlgrmvMUhV1qvcO/1no6ZeSp8VQMiTYkvAOQ7Hd\n"
                  - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDfhaE+TzNY4YlrghWjT7Hc2u1GO9zZJ/zYXrzRT7FCJ8Gr1rRXG8mZ6vQG6SiyPsIL2KQervAlU/7U9IrqXwJM69smDiazYz0TnXu9Bo0Y/fJ+ZmOvlzajc1ZzwcS9p1SO327HlxcCEfeA2Vv8dN88WbwjVOOCSQudQBsrxi6O6pENjYHIOS8pWNHGeUIB6ZoUovvo4tBfOeSBXeGIHSGZiVWNzaDzOPfWBd5M24vyQbsRiZiggAq/4uHtYoi6BKVJtVos5YOM0cuWGSnhptVoAS7eiA3fzcCZb5biFIrjOoJNG8JtwrewBzrOFxHjxr5Tzk1x7RQPw7UQdEbcBov/h5pfViEnUig3YNNb6xYx82ZMCIoGLgRZ8U98B6vVt5/cZRAkS/Oz25SyhkLwjiciKG/wnwAQmafI9IzzCbEmkrysMKPt2t0//umtGRGS3+UiBmNY0HZ0fTs+eBkaqQp49mabdmEGD7kTHaZNjtG8rKeuKElKRUcIotf6l4WimaOgV95U7u9nTkK1QNddn5/huJKw+K0R6oyCqmDzsL8XvWF4dck57FRc0aJnMU5aHCOKzRs3EyoYII4q+/TZXbQ02TOb/aXsXXSq+c/MIzVAS+U9+SxXUr5dguCrpzUlmsYHZLhgJBt1TeJwpAUCIJJRqJYgkh24EXnTE7Z0WaQ7Gw==\n"
              group: ec2-user
              mode: '000400'
              owner: ec2-user
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: 'true'
            VolumeSize: '25'
            VolumeType: gp2
      ImageId: !Ref 'AMI'
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: t2.micro
      Monitoring: 'true'
      SecurityGroupIds:
        - !Ref 'AirflowSg'
      SubnetId: !Ref 'Subnet'
      Tags:
        - Key: Name
          Value: airflow
        - Key: StackName
          Value: !Ref 'AWS::StackName'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -xe\n"
            - '/opt/aws/bin/cfn-init -v '
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource Airflow'
            - ' --region '
            - !Ref 'AWS::Region'
            - "\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - /opt/aws/bin/cfn-hup || error_exit "Failed to start cfn-hup"
            - "\n"
            - '/opt/aws/bin/cfn-signal -e $? '
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource Airflow'
            - ' --region '
            - !Ref 'AWS::Region'
            - "\n"
    Type: AWS::EC2::Instance
  AirflowSg:
    Properties:
      GroupDescription: Airflow security group
      SecurityGroupIngress:
        - CidrIp: 172.31.0.0/16
          FromPort: '1'
          IpProtocol: tcp
          ToPort: '65535'
      Tags:
        - Key: Name
          Value: airflow-sg
        - Key: StackName
          Value: !Ref 'AWS::StackName'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::SecurityGroup
  Subnet:
    Properties:
      AvailabilityZone: eu-west-1a
      CidrBlock: 172.31.24.0/24
      Tags:
        - Key: AZ
          Value: eu-west-1b
        - Key: Name
          Value: airflow-private-eu-west-1a
        - Key: StackName
          Value: !Ref 'AWS::StackName'
      VpcId: !Ref 'VpcId'
    Type: AWS::EC2::Subnet
  SubnetRouteTableAssociation:
    Properties:
      RouteTableId: !Ref 'PrivateRouteTable'
      SubnetId: !Ref 'Subnet'
    Type: AWS::EC2::SubnetRouteTableAssociation
