AWSTemplateFormatVersion: '2010-09-09'
Description: Stack containing kinesis and firehose writing to S3
Resources:
  DeliveryStream:
    Properties:
      DeliveryStreamName: DevDeliveryStream
      S3DestinationConfiguration:
        BucketARN: arn:aws:s3:::nicor-data-stream
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        CompressionFormat: UNCOMPRESSED
        Prefix: delivery_stream/
        RoleARN: !GetAtt [FirehoseRole, Arn]
    Type: AWS::KinesisFirehose::DeliveryStream
  DevStream:
    Properties:
      Name: DevStream
      ShardCount: '1'
      Tags:
      - Key: Name
        Value: DevStream
      - Key: StackName
        Value: !Ref 'AWS::StackName'
    Type: AWS::Kinesis::Stream
  ExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource:
            - arn:aws:logs:*:*:*
            Sid: Logs
          - Action:
            - kinesis:*
            Effect: Allow
            Resource:
            - !GetAtt [DevStream, Arn]
            Sid: KinesisStream
          - Action:
            - firehose:*
            Effect: Allow
            Resource:
            - arn:aws:firehose:*:*:deliverystream/DevDeliveryStream
            Sid: DeliveryStream
          Version: '2012-10-17'
        PolicyName: KinesisToFirehosePolicy
    Type: AWS::IAM::Role
  FirehoseRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:*
            Effect: Allow
            Resource:
            - arn:aws:s3:::nicor-data-stream
            - arn:aws:s3:::nicor-data-stream/*
            Sid: S3Access
          - Action:
            - logs:*
            Effect: Allow
            Resource:
            - '*'
            Sid: Logs
          Version: '2012-10-17'
        PolicyName: AccessToS3andLogs
    Type: AWS::IAM::Role
  KinesisLambdaTrigger:
    Properties:
      BatchSize: 100
      Enabled: true
      EventSourceArn: !GetAtt [DevStream, Arn]
      FunctionName: !Ref 'KinesisStreamToFirehose'
      StartingPosition: TRIM_HORIZON
    Type: AWS::Lambda::EventSourceMapping
  KinesisStreamToFirehose:
    Properties:
      Code:
        S3Bucket: nicor-dev
        S3Key: deployments/lambdas/link_kinesis_stream_to_firehose.zip
      Description: Lambda function to read kinesis stream and put to firehose
      Environment:
        Variables:
          DELIVERY_STREAM: DevDeliveryStream
      FunctionName: link_kinesis_stream_to_firehose
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt [ExecutionRole, Arn]
      Runtime: python3.6
      Timeout: 30
    Type: AWS::Lambda::Function
  S3DestinationBucket:
    Properties:
      BucketName: nicor-data-stream
    Type: AWS::S3::Bucket
